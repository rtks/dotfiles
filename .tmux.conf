# 環境変数設定
# SSH
if-shell '[ -n "$SSH_CONNECTION" ]' 'set-environment -g SSH_CONNECTED on'
# Powerlineのセパレータ文字の環境変数を反映する
set -ga update-environment " SEGMENT_SEPARATOR LC_CTYPE"

# 全般設定
# シェルをfishに設定
set-option -g default-command fish
# Tarminalタイプ設定 これがないとテーマを設定したvimの色がおかしくなる
set -g default-terminal "screen-256color"
# バッファサイズを設定
set -g history-limit 20000
# ウィンドウのインデックスを1から始める
set -g base-index 1
# ペインのインデックスを1から始める
setw -g pane-base-index 1

# マウス設定
# マウスモードはデフォルトでoff
set -g mouse off
# prefix-mでon/offを切り替える
bind m if-shell "tmux show-options -g mouse | grep off" "set-option -g mouse on" "set-option -g mouse off" \; refresh-client
# ホイールでスクロールする
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"

# キーバインド設定
# PrefixをCtrl+tに変更
set-option -g prefix C-t
unbind-key C-b
bind-key C-t send-prefix
# Prefix+r 設定ファイルを再読み込み
bind r source-file ~/.tmux.conf \; display "Reloaded!"
# Prefix+- ペインを横分割
bind | split-window -h
# Prefix+| ペインを縦分割
bind - split-window -v
# Prefix+@ ペインを移動
bind @ choose-tree -w 'join-pane -t %%'

# キーバインドをVim風にする
# viのキーバインドを使用する
setw -g mode-keys vi
# Vimのキーバインドでペインを移動する
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+
# Vimのキーバインドでペインをリサイズする
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5
# コピーモードの操作をvi風に設定する
bind -T copy-mode-vi v     send-keys -X begin-selection
# OSXでクリップボードを共有
bind -T copy-mode-vi y     send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# ステータスバー設定
# ステータスバーの更新時間を2秒にする
set -g status-interval 2
# ステータスバーのUTF8を有効にする
#set -g status-utf8 on
# ステータスバーの最大文字数を設定 
set -g status-left-length 50
set -g status-right-length 20
# ステータスバー表示内容を設定
set -g status-left "#[fg=colour15,bold]#{?client_prefix,#[bg=colour1],#[bg=colour4]} ❐ #{session_attached} #S #[bg=colour0,nobold]#{?client_prefix,#[fg=colour1],#[fg=colour4]}$SEGMENT_SEPARATOR"
set -g status-right '#(tmux show-option -g mouse | grep -q on && echo "mouse on ")'
set -g window-status-format "#[fg=colour11,bg=colour0] #{?window_zoomed_flag,+,}#I: #W[#{pane_current_command}]"
set -g window-status-current-format "#[fg=colour0,bg=colour2]$SEGMENT_SEPARATOR#[fg=colour15,bg=colour2,noreverse,bold] #{?window_zoomed_flag,+,}#I: #W #[fg=colour2,bg=colour0,nobold]$SEGMENT_SEPARATOR"

# カラースキーム設定
set -g status-style bg='colour0',fg='colour7'
set -g window-status-activity-style 'bold'
set -g pane-border-style fg='colour0'
set -g pane-active-border-style fg='colour0'
set -g message-style bg='colour0','bold',fg='colour7'

# Plugins
if-shell '[ -f ~/.tmux/plugins/tmux-logging/logging.tmux ]' 'run-shell ~/.tmux/plugins/tmux-logging/logging.tmux'

# 環境依存の設定
if-shell '[ -f $HOME/.tmux.local.conf ]' 'source "$HOME/.tmux.local.conf"'

